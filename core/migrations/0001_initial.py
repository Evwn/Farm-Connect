# Generated by Django 5.2 on 2025-04-22 14:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EscrowTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Funded', 'Funded'), ('Waiting_Confirmation', 'Waiting Confirmation'), ('Confirmed', 'Confirmed'), ('Awaiting_Release', 'Awaiting Release'), ('Released', 'Released'), ('Refunded', 'Refunded'), ('Disputed', 'Disputed')], default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('release_date', models.DateTimeField(blank=True, null=True)),
                ('confirmation_time', models.DateTimeField(blank=True, null=True)),
                ('scheduled_release_time', models.DateTimeField(blank=True, null=True)),
                ('dispute_reason', models.TextField(blank=True)),
                ('dispute_status', models.CharField(blank=True, choices=[('Pending', 'Pending Review'), ('Under_Review', 'Under Review'), ('Seller_Responded', 'Seller Responded'), ('Mediation', 'In Mediation'), ('Resolved_Seller', 'Resolved in Favor of Seller'), ('Resolved_Buyer', 'Resolved in Favor of Buyer'), ('Resolved_Compromise', 'Resolved with Compromise')], max_length=20, null=True)),
                ('dispute_date', models.DateTimeField(blank=True, null=True)),
                ('dispute_resolved_date', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolution_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('farmer', 'Farmer'), ('buyer', 'Buyer')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DisputeTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status_change', models.CharField(blank=True, choices=[('Pending', 'Pending Review'), ('Under_Review', 'Under Review'), ('Seller_Responded', 'Seller Responded'), ('Mediation', 'In Mediation'), ('Resolved_Seller', 'Resolved in Favor of Seller'), ('Resolved_Buyer', 'Resolved in Favor of Buyer'), ('Resolved_Compromise', 'Resolved with Compromise')], max_length=20, null=True)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('escrow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispute_timeline', to='core.escrowtransaction')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='DisputeResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='dispute_attachments/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('escrow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispute_responses', to='core.escrowtransaction')),
            ],
        ),
        migrations.CreateModel(
            name='DisputeMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_admin_message', models.BooleanField(default=False)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='dispute_messages/')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('escrow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispute_messages', to='core.escrowtransaction')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('established_year', models.PositiveIntegerField()),
                ('address', models.TextField()),
                ('total_area', models.DecimalField(decimal_places=2, max_digits=10)),
                ('primary_crop', models.CharField(blank=True, max_length=100)),
                ('soil_type', models.CharField(blank=True, choices=[('Loamy', 'Loamy'), ('Clay', 'Clay'), ('Sandy', 'Sandy')], max_length=20)),
                ('description', models.TextField()),
                ('is_organic_certified', models.BooleanField(default=False)),
                ('is_fair_trade_certified', models.BooleanField(default=False)),
                ('gallery_images', models.ImageField(blank=True, null=True, upload_to='farm_gallery/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Shipped', 'Shipped'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Processing', max_length=10)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('In Escrow', 'In Escrow'), ('Released', 'Released'), ('Refunded', 'Refunded')], default='Pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('escrow_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='escrowtransaction',
            name='order',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='escrow_transaction', to='core.order'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('Grains', 'Grains'), ('Vegetables', 'Vegetables'), ('Fruits', 'Fruits'), ('Dairy', 'Dairy')], max_length=20)),
                ('price_per_kg', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.TextField()),
                ('stock_quantity', models.PositiveIntegerField()),
                ('harvest_date', models.DateField()),
                ('location', models.CharField(max_length=200, null=True, verbose_name='Farm Location')),
                ('is_organic', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.product'),
        ),
    ]
